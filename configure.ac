# 
# $Id$
#
# This configure build file indicates what libraries and includes
# exist on the system and generates the required code for to
# be able to correctly configure the libwcl library
#
# A good reference for macros for this config file is at:
# http://sourceware.org/autobook/autobook/autobook_283.html

AC_PREREQ(2.50)

# Initialise the system
AC_INIT(wcl, 0.0.0, wcl@wcl.levels.unisa.edu.au)

# Define where autogenerated build files such as 'missing'
# should be located. This is also the location of any additional
# m4 macros that are required
AC_CONFIG_AUX_DIR(cfg)

#
# Init Automake subsystem
#
AM_INIT_AUTOMAKE(wcl,0.0.0)
AM_CONFIG_HEADER(config.h)

#
# Setup Options
#
#####################################

# Indicate this is a release build and that 
# dependancies for changes between Makefile.am and Makefile.in
# should not be checked. This makes compiling faster. If you are working
# on the library, run: ./configure --enable-maintainer-mode to enable the dependancies
AM_MAINTAINER_MODE

#
# Configure options
#
#####################################

#
# TCP/UDP Networking
#    When enabled: enable_network is defined to 'yes' or 'no'
#
AC_ARG_ENABLE(network, AC_HELP_STRING([--enable-network], [Enable basic TCP/UDP C++ Code]), , enable_network="no")

#
# Microsoft Visual C++ Compiler
# 	When enabled: enable_msvc is defined to 'yes' or 'no'
#
AC_ARG_ENABLE(msvc, AC_HELP_STRING([--enable-msvc], [Compile to Microsoft .lib & .dll library]), , enable_msvc="no")

#
# Serial Port / RS232 Code
# 	When enabled: enable_serial is defined to 'yes' or 'no'
#
#AC_ARG_ENABLE(serial, AC_HELP_STRING([--enable-serial], [Enable RS232 Serial Code]), , enable_serial="no")

#
# Firewire/1394 Video Support 
# 	When enabled: enable_video_1394 is defined to 'yes' or 'no'
#
AC_ARG_ENABLE(video, AC_HELP_STRING([--enable-video], [Enable 1394/Firewire Video Support]), enable_video_1394="yes" , enable_video_1394="no")

# 
#  Enable All Options
# 	This simply enables each option
AC_ARG_ENABLE(all, AC_HELP_STRING([--enable-all], [Enable Support For Everything]), 
	     enable_network="yes";
	     enable_serial="yes";
	     enable_video_1394="yes")

#
#  Check to see if anything is configured
#
AC_MSG_CHECKING([Checking we need to build something]);
if test "x$enable_network" == "xno" && \
# test "x$enable_serial" == "xno" && \
   test "x$enable_video_1394" == "xno"; then
   AC_MSG_RESULT([nup])
   AC_MSG_ERROR([You must select something to build!, use --help for details])
fi
AC_MSG_RESULT([yes])


#
# Automake Substitution Variables
#

AM_CONDITIONAL(ENABLE_NETWORK, test "x$enable_network" = "xyes")
AM_CONDITIONAL(ENABLE_MSVC, test "x$enable_msvc" = "xyes")
AM_CONDITIONAL(ENABLE_SERIAL, test "x$enable_serial" = "xyes")
AM_CONDITIONAL(ENABLE_VIDEO_1394, test "x$enable_video_1394" = "xyes")


#
# System Checks
#
#######################################

#
# Check which system we are on
#  	This sets: host variable

# Aaron put this in as a quick hack to test something, shouldn't really be here though
_AM_DEPENDENCIES([OBJC])

#
# Add required hacks to make automake work
# (defined in cfg/other.m4)
WCL_HACKS

#
# Check to see if an Microsoft Compiler is requested, if so
# we need to check a few other things
#

if test "x$enable_msvc" = "xyes"; then
    WCL_AC_MSVC_SETUP
fi

WCL_FRIDGE_CHECK

#
# Check for programs
#
#######################################

#
# Test for Package Config
# We need this for a lot of packages
#
AC_PATH_PROG(PKG_CONFIG, pkg-config)
if test "x$PKG_CONFIG" = "x"; then
	AC_MSG_ERROR([You need to install pkg-config])
fi

#
# Need the C++ Compiler, Installer and ranlib to strip libraries
#
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_RANLIB
#AC_PROG_LIBTOOL

#
# Platform specific setup
#
#############################
AC_CANONICAL_HOST
WCL_PLATFORM_SETUP

#
# Check for libraries
#
#############################
if test "x$enable_video_1394" == "xyes"; then
    if test "x$platform_linux" == "xyes"; then
	PKG_CHECK_MODULES(LIBRAW1394, libraw1394 >= 1.0.0)
	PKGCONFIG_OTHERLIBS="$PKGCONFIG_OTHERLIBS $LIBRAW1394_LIBS"
	PKGCONFIG_OTHERINCLUDES="$PKGCONFIG_OTHERINCLUDES $LIBRAW1394_CFLAGS"
    elif test "x$platform_osx" == "xyes"; then
	PKGCONFIG_OTHERLIBS="$PKGCONFIG_OTHERLIBS -framework Carbon"
    else
	AC_MSG_ERROR([Video Support Is Not Available on your platform])
    fi
fi

#
# Checks for typedefs, structures, and compiler characteristics.
#
#############################
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

#
# Checks for library functions.
#
##############################
AC_FUNC_MALLOC
AC_CHECK_FUNCS([memset])

#
# Indicate what will be built into libwcl, 
# Crash out if nothing is defined
#
###############################
echo "-----------------------------"
echo "libwcl Configuration Summary "
echo "-----------------------------"
echo "Microsoft (msvc) support: $enable_msvc"
echo "network support         : $enable_network"
#echo "serial (rs232) support  : $enable_serial"
echo "1394 (Firewire) Video   : $enable_video_1394"
echo "-----------------------------"

#
# Tell automake to substitute the values for 
# package config
#
AC_SUBST(PKGCONFIG_OTHERLIBS)
AC_SUBST(PKGCONFIG_OTHERINCLUDES)

#
# Files to create
#
##############################
AC_CONFIG_FILES([Makefile
		 src/Makefile
                 src/wcl/Makefile
		 libwcl.pc
		])

#
# Build the configure file
#
###########################
AC_OUTPUT
